// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.0
// source: config/fwconf.proto

package config

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Data_Config_SrcType_Enums int32

const (
	Data_Config_SrcType_Unknown Data_Config_SrcType_Enums = 0
	Data_Config_SrcType_File    Data_Config_SrcType_Enums = 1
	Data_Config_SrcType_Etcd    Data_Config_SrcType_Enums = 2
	Data_Config_SrcType_Apollo  Data_Config_SrcType_Enums = 3
)

// Enum value maps for Data_Config_SrcType_Enums.
var (
	Data_Config_SrcType_Enums_name = map[int32]string{
		0: "Unknown",
		1: "File",
		2: "Etcd",
		3: "Apollo",
	}
	Data_Config_SrcType_Enums_value = map[string]int32{
		"Unknown": 0,
		"File":    1,
		"Etcd":    2,
		"Apollo":  3,
	}
)

func (x Data_Config_SrcType_Enums) Enum() *Data_Config_SrcType_Enums {
	p := new(Data_Config_SrcType_Enums)
	*p = x
	return p
}

func (x Data_Config_SrcType_Enums) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Data_Config_SrcType_Enums) Descriptor() protoreflect.EnumDescriptor {
	return file_config_fwconf_proto_enumTypes[0].Descriptor()
}

func (Data_Config_SrcType_Enums) Type() protoreflect.EnumType {
	return &file_config_fwconf_proto_enumTypes[0]
}

func (x Data_Config_SrcType_Enums) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Data_Config_SrcType_Enums.Descriptor instead.
func (Data_Config_SrcType_Enums) EnumDescriptor() ([]byte, []int) {
	return file_config_fwconf_proto_rawDescGZIP(), []int{2, 2, 0, 0}
}

type Data_Config_Format_Enums int32

const (
	Data_Config_Format_Unknown Data_Config_Format_Enums = 0
	Data_Config_Format_Yaml    Data_Config_Format_Enums = 1
	Data_Config_Format_Json    Data_Config_Format_Enums = 2
)

// Enum value maps for Data_Config_Format_Enums.
var (
	Data_Config_Format_Enums_name = map[int32]string{
		0: "Unknown",
		1: "Yaml",
		2: "Json",
	}
	Data_Config_Format_Enums_value = map[string]int32{
		"Unknown": 0,
		"Yaml":    1,
		"Json":    2,
	}
)

func (x Data_Config_Format_Enums) Enum() *Data_Config_Format_Enums {
	p := new(Data_Config_Format_Enums)
	*p = x
	return p
}

func (x Data_Config_Format_Enums) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Data_Config_Format_Enums) Descriptor() protoreflect.EnumDescriptor {
	return file_config_fwconf_proto_enumTypes[1].Descriptor()
}

func (Data_Config_Format_Enums) Type() protoreflect.EnumType {
	return &file_config_fwconf_proto_enumTypes[1]
}

func (x Data_Config_Format_Enums) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Data_Config_Format_Enums.Descriptor instead.
func (Data_Config_Format_Enums) EnumDescriptor() ([]byte, []int) {
	return file_config_fwconf_proto_rawDescGZIP(), []int{2, 2, 1, 0}
}

type Data_Config_Env_Enums int32

const (
	Data_Config_Env_Unknown Data_Config_Env_Enums = 0
	Data_Config_Env_Local   Data_Config_Env_Enums = 100
	Data_Config_Env_Dev     Data_Config_Env_Enums = 200
	Data_Config_Env_Test    Data_Config_Env_Enums = 300
	Data_Config_Env_Alpha   Data_Config_Env_Enums = 400
	Data_Config_Env_Beta    Data_Config_Env_Enums = 500
	Data_Config_Env_Prod    Data_Config_Env_Enums = 600
)

// Enum value maps for Data_Config_Env_Enums.
var (
	Data_Config_Env_Enums_name = map[int32]string{
		0:   "Unknown",
		100: "Local",
		200: "Dev",
		300: "Test",
		400: "Alpha",
		500: "Beta",
		600: "Prod",
	}
	Data_Config_Env_Enums_value = map[string]int32{
		"Unknown": 0,
		"Local":   100,
		"Dev":     200,
		"Test":    300,
		"Alpha":   400,
		"Beta":    500,
		"Prod":    600,
	}
)

func (x Data_Config_Env_Enums) Enum() *Data_Config_Env_Enums {
	p := new(Data_Config_Env_Enums)
	*p = x
	return p
}

func (x Data_Config_Env_Enums) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Data_Config_Env_Enums) Descriptor() protoreflect.EnumDescriptor {
	return file_config_fwconf_proto_enumTypes[2].Descriptor()
}

func (Data_Config_Env_Enums) Type() protoreflect.EnumType {
	return &file_config_fwconf_proto_enumTypes[2]
}

func (x Data_Config_Env_Enums) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Data_Config_Env_Enums.Descriptor instead.
func (Data_Config_Env_Enums) EnumDescriptor() ([]byte, []int) {
	return file_config_fwconf_proto_rawDescGZIP(), []int{2, 2, 2, 0}
}

type Data_Config_PreEnv_DetectMethod int32

const (
	Data_Config_PreEnv_Unknown Data_Config_PreEnv_DetectMethod = 0
	Data_Config_PreEnv_OSEnv   Data_Config_PreEnv_DetectMethod = 100
)

// Enum value maps for Data_Config_PreEnv_DetectMethod.
var (
	Data_Config_PreEnv_DetectMethod_name = map[int32]string{
		0:   "Unknown",
		100: "OSEnv",
	}
	Data_Config_PreEnv_DetectMethod_value = map[string]int32{
		"Unknown": 0,
		"OSEnv":   100,
	}
)

func (x Data_Config_PreEnv_DetectMethod) Enum() *Data_Config_PreEnv_DetectMethod {
	p := new(Data_Config_PreEnv_DetectMethod)
	*p = x
	return p
}

func (x Data_Config_PreEnv_DetectMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Data_Config_PreEnv_DetectMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_config_fwconf_proto_enumTypes[3].Descriptor()
}

func (Data_Config_PreEnv_DetectMethod) Type() protoreflect.EnumType {
	return &file_config_fwconf_proto_enumTypes[3]
}

func (x Data_Config_PreEnv_DetectMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Data_Config_PreEnv_DetectMethod.Descriptor instead.
func (Data_Config_PreEnv_DetectMethod) EnumDescriptor() ([]byte, []int) {
	return file_config_fwconf_proto_rawDescGZIP(), []int{2, 2, 4, 0}
}

type Service_Log_LogLevel_TYPE int32

const (
	Service_Log_LogLevel_Unknown Service_Log_LogLevel_TYPE = 0
	Service_Log_LogLevel_Debug   Service_Log_LogLevel_TYPE = 1
	Service_Log_LogLevel_Info    Service_Log_LogLevel_TYPE = 2
	Service_Log_LogLevel_Warn    Service_Log_LogLevel_TYPE = 3
	Service_Log_LogLevel_Error   Service_Log_LogLevel_TYPE = 4
	Service_Log_LogLevel_Panic   Service_Log_LogLevel_TYPE = 5
	Service_Log_LogLevel_Fatal   Service_Log_LogLevel_TYPE = 6
)

// Enum value maps for Service_Log_LogLevel_TYPE.
var (
	Service_Log_LogLevel_TYPE_name = map[int32]string{
		0: "Unknown",
		1: "Debug",
		2: "Info",
		3: "Warn",
		4: "Error",
		5: "Panic",
		6: "Fatal",
	}
	Service_Log_LogLevel_TYPE_value = map[string]int32{
		"Unknown": 0,
		"Debug":   1,
		"Info":    2,
		"Warn":    3,
		"Error":   4,
		"Panic":   5,
		"Fatal":   6,
	}
)

func (x Service_Log_LogLevel_TYPE) Enum() *Service_Log_LogLevel_TYPE {
	p := new(Service_Log_LogLevel_TYPE)
	*p = x
	return p
}

func (x Service_Log_LogLevel_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Service_Log_LogLevel_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_config_fwconf_proto_enumTypes[4].Descriptor()
}

func (Service_Log_LogLevel_TYPE) Type() protoreflect.EnumType {
	return &file_config_fwconf_proto_enumTypes[4]
}

func (x Service_Log_LogLevel_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Service_Log_LogLevel_TYPE.Descriptor instead.
func (Service_Log_LogLevel_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_config_fwconf_proto_rawDescGZIP(), []int{3, 9, 0, 0}
}

type Service_Log_STORAGE_TYPE int32

const (
	Service_Log_STORAGE_Unknown Service_Log_STORAGE_TYPE = 0
	Service_Log_STORAGE_FILE    Service_Log_STORAGE_TYPE = 1
	Service_Log_STORAGE_ES      Service_Log_STORAGE_TYPE = 2
	Service_Log_STORAGE_STD_OUT Service_Log_STORAGE_TYPE = 3
)

// Enum value maps for Service_Log_STORAGE_TYPE.
var (
	Service_Log_STORAGE_TYPE_name = map[int32]string{
		0: "Unknown",
		1: "FILE",
		2: "ES",
		3: "STD_OUT",
	}
	Service_Log_STORAGE_TYPE_value = map[string]int32{
		"Unknown": 0,
		"FILE":    1,
		"ES":      2,
		"STD_OUT": 3,
	}
)

func (x Service_Log_STORAGE_TYPE) Enum() *Service_Log_STORAGE_TYPE {
	p := new(Service_Log_STORAGE_TYPE)
	*p = x
	return p
}

func (x Service_Log_STORAGE_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Service_Log_STORAGE_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_config_fwconf_proto_enumTypes[5].Descriptor()
}

func (Service_Log_STORAGE_TYPE) Type() protoreflect.EnumType {
	return &file_config_fwconf_proto_enumTypes[5]
}

func (x Service_Log_STORAGE_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Service_Log_STORAGE_TYPE.Descriptor instead.
func (Service_Log_STORAGE_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_config_fwconf_proto_rawDescGZIP(), []int{3, 9, 1, 0}
}

type Service_AuthMethod_Enums int32

const (
	Service_AuthMethod_Default     Service_AuthMethod_Enums = 0 //等同于InsideGrpc
	Service_AuthMethod_OutsideHttp Service_AuthMethod_Enums = 2 //服务所在网络外-http
)

// Enum value maps for Service_AuthMethod_Enums.
var (
	Service_AuthMethod_Enums_name = map[int32]string{
		0: "Default",
		2: "OutsideHttp",
	}
	Service_AuthMethod_Enums_value = map[string]int32{
		"Default":     0,
		"OutsideHttp": 2,
	}
)

func (x Service_AuthMethod_Enums) Enum() *Service_AuthMethod_Enums {
	p := new(Service_AuthMethod_Enums)
	*p = x
	return p
}

func (x Service_AuthMethod_Enums) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Service_AuthMethod_Enums) Descriptor() protoreflect.EnumDescriptor {
	return file_config_fwconf_proto_enumTypes[6].Descriptor()
}

func (Service_AuthMethod_Enums) Type() protoreflect.EnumType {
	return &file_config_fwconf_proto_enumTypes[6]
}

func (x Service_AuthMethod_Enums) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Service_AuthMethod_Enums.Descriptor instead.
func (Service_AuthMethod_Enums) EnumDescriptor() ([]byte, []int) {
	return file_config_fwconf_proto_rawDescGZIP(), []int{3, 10, 0}
}

type Bootstrap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server  *Server  `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
	Data    *Data    `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Service *Service `protobuf:"bytes,3,opt,name=service,proto3" json:"service,omitempty"`
}

func (x *Bootstrap) Reset() {
	*x = Bootstrap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_fwconf_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bootstrap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bootstrap) ProtoMessage() {}

func (x *Bootstrap) ProtoReflect() protoreflect.Message {
	mi := &file_config_fwconf_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bootstrap.ProtoReflect.Descriptor instead.
func (*Bootstrap) Descriptor() ([]byte, []int) {
	return file_config_fwconf_proto_rawDescGZIP(), []int{0}
}

func (x *Bootstrap) GetServer() *Server {
	if x != nil {
		return x.Server
	}
	return nil
}

func (x *Bootstrap) GetData() *Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Bootstrap) GetService() *Service {
	if x != nil {
		return x.Service
	}
	return nil
}

type Server struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Http    *Server_HTTP    `protobuf:"bytes,1,opt,name=http,proto3" json:"http,omitempty"`
	Grpc    *Server_GRPC    `protobuf:"bytes,2,opt,name=grpc,proto3" json:"grpc,omitempty"`
	Prof    *Server_Prof    `protobuf:"bytes,3,opt,name=prof,proto3" json:"prof,omitempty"`
	Healthy *Server_Healthy `protobuf:"bytes,4,opt,name=healthy,proto3" json:"healthy,omitempty"`
	Monitor *Server_Monitor `protobuf:"bytes,5,opt,name=monitor,proto3" json:"monitor,omitempty"`
}

func (x *Server) Reset() {
	*x = Server{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_fwconf_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server) ProtoMessage() {}

func (x *Server) ProtoReflect() protoreflect.Message {
	mi := &file_config_fwconf_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server.ProtoReflect.Descriptor instead.
func (*Server) Descriptor() ([]byte, []int) {
	return file_config_fwconf_proto_rawDescGZIP(), []int{1}
}

func (x *Server) GetHttp() *Server_HTTP {
	if x != nil {
		return x.Http
	}
	return nil
}

func (x *Server) GetGrpc() *Server_GRPC {
	if x != nil {
		return x.Grpc
	}
	return nil
}

func (x *Server) GetProf() *Server_Prof {
	if x != nil {
		return x.Prof
	}
	return nil
}

func (x *Server) GetHealthy() *Server_Healthy {
	if x != nil {
		return x.Healthy
	}
	return nil
}

func (x *Server) GetMonitor() *Server_Monitor {
	if x != nil {
		return x.Monitor
	}
	return nil
}

type Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database *Data_Database `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Redis    *Data_Redis    `protobuf:"bytes,2,opt,name=redis,proto3" json:"redis,omitempty"`
	Config   *Data_Config   `protobuf:"bytes,300,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *Data) Reset() {
	*x = Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_fwconf_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_config_fwconf_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_config_fwconf_proto_rawDescGZIP(), []int{2}
}

func (x *Data) GetDatabase() *Data_Database {
	if x != nil {
		return x.Database
	}
	return nil
}

func (x *Data) GetRedis() *Data_Redis {
	if x != nil {
		return x.Redis
	}
	return nil
}

func (x *Data) GetConfig() *Data_Config {
	if x != nil {
		return x.Config
	}
	return nil
}

//服务相关
type Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Env             string             `protobuf:"bytes,1,opt,name=env,proto3" json:"env,omitempty"`
	Secret          string             `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
	AuthClose       bool               `protobuf:"varint,3,opt,name=auth_close,json=authClose,proto3" json:"auth_close,omitempty"`
	K8SNamespace    string             `protobuf:"bytes,40,opt,name=k8s_namespace,json=k8sNamespace,proto3" json:"k8s_namespace,omitempty"`
	DiscoveryMethod string             `protobuf:"bytes,41,opt,name=discovery_method,json=discoveryMethod,proto3" json:"discovery_method,omitempty"`
	RegistryMethod  string             `protobuf:"bytes,42,opt,name=registry_method,json=registryMethod,proto3" json:"registry_method,omitempty"`
	Registrys       *Service_Registrys `protobuf:"bytes,4,opt,name=registrys,proto3" json:"registrys,omitempty"`
	Traces          *Service_Traces    `protobuf:"bytes,5,opt,name=traces,proto3" json:"traces,omitempty"`
	Alert           *Service_Alert     `protobuf:"bytes,6,opt,name=alert,proto3" json:"alert,omitempty"`
	Gateways        *Service_Gateways  `protobuf:"bytes,7,opt,name=gateways,proto3" json:"gateways,omitempty"`
	//cors
	AllowOriginList []string      `protobuf:"bytes,8,rep,name=allow_origin_list,json=allowOriginList,proto3" json:"allow_origin_list,omitempty"`
	Cors            *Service_Cors `protobuf:"bytes,9,opt,name=cors,proto3" json:"cors,omitempty"`
	Log             *Service_Log  `protobuf:"bytes,20,opt,name=log,proto3" json:"log,omitempty"`
	CloseMetric     bool          `protobuf:"varint,300,opt,name=close_metric,json=closeMetric,proto3" json:"close_metric,omitempty"`
	//是否部署在外部网络---目前已废弃，请勿继续使用
	InExternalNetwork      bool                              `protobuf:"varint,400,opt,name=in_external_network,json=inExternalNetwork,proto3" json:"in_external_network,omitempty"`
	UserAuthMethod         Service_AuthMethod_Enums          `protobuf:"varint,500,opt,name=user_auth_method,json=userAuthMethod,proto3,enum=conf.Service_AuthMethod_Enums" json:"user_auth_method,omitempty"`
	SvcAuthMethod          Service_AuthMethod_Enums          `protobuf:"varint,600,opt,name=svc_auth_method,json=svcAuthMethod,proto3,enum=conf.Service_AuthMethod_Enums" json:"svc_auth_method,omitempty"`
	Sdn                    *Service_Sdn                      `protobuf:"bytes,700,opt,name=sdn,proto3" json:"sdn,omitempty"`
	DependencyHttpServices map[string]*Service_DependencySvc `protobuf:"bytes,800,rep,name=dependency_http_services,json=dependencyHttpServices,proto3" json:"dependency_http_services,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ServiceAlias           map[string]string                 `protobuf:"bytes,900,rep,name=service_alias,json=serviceAlias,proto3" json:"service_alias,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Service) Reset() {
	*x = Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_fwconf_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service) ProtoMessage() {}

func (x *Service) ProtoReflect() protoreflect.Message {
	mi := &file_config_fwconf_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service.ProtoReflect.Descriptor instead.
func (*Service) Descriptor() ([]byte, []int) {
	return file_config_fwconf_proto_rawDescGZIP(), []int{3}
}

func (x *Service) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

func (x *Service) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *Service) GetAuthClose() bool {
	if x != nil {
		return x.AuthClose
	}
	return false
}

func (x *Service) GetK8SNamespace() string {
	if x != nil {
		return x.K8SNamespace
	}
	return ""
}

func (x *Service) GetDiscoveryMethod() string {
	if x != nil {
		return x.DiscoveryMethod
	}
	return ""
}

func (x *Service) GetRegistryMethod() string {
	if x != nil {
		return x.RegistryMethod
	}
	return ""
}

func (x *Service) GetRegistrys() *Service_Registrys {
	if x != nil {
		return x.Registrys
	}
	return nil
}

func (x *Service) GetTraces() *Service_Traces {
	if x != nil {
		return x.Traces
	}
	return nil
}

func (x *Service) GetAlert() *Service_Alert {
	if x != nil {
		return x.Alert
	}
	return nil
}

func (x *Service) GetGateways() *Service_Gateways {
	if x != nil {
		return x.Gateways
	}
	return nil
}

func (x *Service) GetAllowOriginList() []string {
	if x != nil {
		return x.AllowOriginList
	}
	return nil
}

func (x *Service) GetCors() *Service_Cors {
	if x != nil {
		return x.Cors
	}
	return nil
}

func (x *Service) GetLog() *Service_Log {
	if x != nil {
		return x.Log
	}
	return nil
}

func (x *Service) GetCloseMetric() bool {
	if x != nil {
		return x.CloseMetric
	}
	return false
}

func (x *Service) GetInExternalNetwork() bool {
	if x != nil {
		return x.InExternalNetwork
	}
	return false
}

func (x *Service) GetUserAuthMethod() Service_AuthMethod_Enums {
	if x != nil {
		return x.UserAuthMethod
	}
	return Service_AuthMethod_Default
}

func (x *Service) GetSvcAuthMethod() Service_AuthMethod_Enums {
	if x != nil {
		return x.SvcAuthMethod
	}
	return Service_AuthMethod_Default
}

func (x *Service) GetSdn() *Service_Sdn {
	if x != nil {
		return x.Sdn
	}
	return nil
}

func (x *Service) GetDependencyHttpServices() map[string]*Service_DependencySvc {
	if x != nil {
		return x.DependencyHttpServices
	}
	return nil
}

func (x *Service) GetServiceAlias() map[string]string {
	if x != nil {
		return x.ServiceAlias
	}
	return nil
}

type Server_HTTP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network string               `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Addr    string               `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Timeout *durationpb.Duration `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *Server_HTTP) Reset() {
	*x = Server_HTTP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_fwconf_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server_HTTP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_HTTP) ProtoMessage() {}

func (x *Server_HTTP) ProtoReflect() protoreflect.Message {
	mi := &file_config_fwconf_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_HTTP.ProtoReflect.Descriptor instead.
func (*Server_HTTP) Descriptor() ([]byte, []int) {
	return file_config_fwconf_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Server_HTTP) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Server_HTTP) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Server_HTTP) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

type Server_GRPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network string               `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Addr    string               `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Timeout *durationpb.Duration `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *Server_GRPC) Reset() {
	*x = Server_GRPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_fwconf_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server_GRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_GRPC) ProtoMessage() {}

func (x *Server_GRPC) ProtoReflect() protoreflect.Message {
	mi := &file_config_fwconf_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_GRPC.ProtoReflect.Descriptor instead.
func (*Server_GRPC) Descriptor() ([]byte, []int) {
	return file_config_fwconf_proto_rawDescGZIP(), []int{1, 1}
}

func (x *Server_GRPC) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Server_GRPC) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Server_GRPC) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

type Server_Prof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Open    bool                 `protobuf:"varint,1,opt,name=open,proto3" json:"open,omitempty"`
	Network string               `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	Addr    string               `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
	Timeout *durationpb.Duration `protobuf:"bytes,4,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *Server_Prof) Reset() {
	*x = Server_Prof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_fwconf_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server_Prof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_Prof) ProtoMessage() {}

func (x *Server_Prof) ProtoReflect() protoreflect.Message {
	mi := &file_config_fwconf_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_Prof.ProtoReflect.Descriptor instead.
func (*Server_Prof) Descriptor() ([]byte, []int) {
	return file_config_fwconf_proto_rawDescGZIP(), []int{1, 2}
}

func (x *Server_Prof) GetOpen() bool {
	if x != nil {
		return x.Open
	}
	return false
}

func (x *Server_Prof) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Server_Prof) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Server_Prof) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

type Server_Healthy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Open    bool                 `protobuf:"varint,1,opt,name=open,proto3" json:"open,omitempty"`
	Network string               `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	Addr    string               `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
	Timeout *durationpb.Duration `protobuf:"bytes,4,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *Server_Healthy) Reset() {
	*x = Server_Healthy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_fwconf_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server_Healthy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_Healthy) ProtoMessage() {}

func (x *Server_Healthy) ProtoReflect() protoreflect.Message {
	mi := &file_config_fwconf_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_Healthy.ProtoReflect.Descriptor instead.
func (*Server_Healthy) Descriptor() ([]byte, []int) {
	return file_config_fwconf_proto_rawDescGZIP(), []int{1, 3}
}

func (x *Server_Healthy) GetOpen() bool {
	if x != nil {
		return x.Open
	}
	return false
}

func (x *Server_Healthy) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Server_Healthy) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Server_Healthy) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

type Server_Monitor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Open    bool                 `protobuf:"varint,1,opt,name=open,proto3" json:"open,omitempty"`
	Network string               `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	Addr    string               `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
	Timeout *durationpb.Duration `protobuf:"bytes,4,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *Server_Monitor) Reset() {
	*x = Server_Monitor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_fwconf_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server_Monitor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_Monitor) ProtoMessage() {}

func (x *Server_Monitor) ProtoReflect() protoreflect.Message {
	mi := &file_config_fwconf_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_Monitor.ProtoReflect.Descriptor instead.
func (*Server_Monitor) Descriptor() ([]byte, []int) {
	return file_config_fwconf_proto_rawDescGZIP(), []int{1, 4}
}

func (x *Server_Monitor) GetOpen() bool {
	if x != nil {
		return x.Open
	}
	return false
}

func (x *Server_Monitor) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Server_Monitor) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Server_Monitor) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

type Data_Database struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Driver string `protobuf:"bytes,1,opt,name=driver,proto3" json:"driver,omitempty"`
	Source string `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *Data_Database) Reset() {
	*x = Data_Database{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_fwconf_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data_Database) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_Database) ProtoMessage() {}

func (x *Data_Database) ProtoReflect() protoreflect.Message {
	mi := &file_config_fwconf_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_Database.ProtoReflect.Descriptor instead.
func (*Data_Database) Descriptor() ([]byte, []int) {
	return file_config_fwconf_proto_rawDescGZIP(), []int{2, 0}
}

func (x *Data_Database) GetDriver() string {
	if x != nil {
		return x.Driver
	}
	return ""
}

func (x *Data_Database) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type Data_Redis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network      string               `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Addr         string               `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Password     string               `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	ReadTimeout  *durationpb.Duration `protobuf:"bytes,4,opt,name=read_timeout,json=readTimeout,proto3" json:"read_timeout,omitempty"`
	WriteTimeout *durationpb.Duration `protobuf:"bytes,5,opt,name=write_timeout,json=writeTimeout,proto3" json:"write_timeout,omitempty"`
}

func (x *Data_Redis) Reset() {
	*x = Data_Redis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_fwconf_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data_Redis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_Redis) ProtoMessage() {}

func (x *Data_Redis) ProtoReflect() protoreflect.Message {
	mi := &file_config_fwconf_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_Redis.ProtoReflect.Descriptor instead.
func (*Data_Redis) Descriptor() ([]byte, []int) {
	return file_config_fwconf_proto_rawDescGZIP(), []int{2, 1}
}

func (x *Data_Redis) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Data_Redis) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Data_Redis) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Data_Redis) GetReadTimeout() *durationpb.Duration {
	if x != nil {
		return x.ReadTimeout
	}
	return nil
}

func (x *Data_Redis) GetWriteTimeout() *durationpb.Duration {
	if x != nil {
		return x.WriteTimeout
	}
	return nil
}

type Data_Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//SrcType.Enums src_type = 100;
	Format      Data_Config_Format_Enums  `protobuf:"varint,200,opt,name=format,proto3,enum=conf.Data_Config_Format_Enums" json:"format,omitempty"`
	EtcdSources []*Data_Config_EtcdSource `protobuf:"bytes,300,rep,name=etcd_sources,json=etcdSources,proto3" json:"etcd_sources,omitempty"`
	Env         Data_Config_Env_Enums     `protobuf:"varint,400,opt,name=env,proto3,enum=conf.Data_Config_Env_Enums" json:"env,omitempty"`
	Namespace   string                    `protobuf:"bytes,500,opt,name=namespace,proto3" json:"namespace,omitempty"`
	//公共模块配置
	Modules            []string                        `protobuf:"bytes,600,rep,name=modules,proto3" json:"modules,omitempty"`
	ModulesBasePath    string                          `protobuf:"bytes,700,opt,name=modules_base_path,json=modulesBasePath,proto3" json:"modules_base_path,omitempty"`
	PreEnvDetectMethod Data_Config_PreEnv_DetectMethod `protobuf:"varint,800,opt,name=pre_env_detect_method,json=preEnvDetectMethod,proto3,enum=conf.Data_Config_PreEnv_DetectMethod" json:"pre_env_detect_method,omitempty"`
	//启用预发布配置的情况下，其基础地址路径
	PreBasePath string `protobuf:"bytes,900,opt,name=pre_base_path,json=preBasePath,proto3" json:"pre_base_path,omitempty"`
	//启用预发布配置的情况下，预发布环境变量名
	PreOsEnvName string `protobuf:"bytes,1000,opt,name=pre_os_env_name,json=preOsEnvName,proto3" json:"pre_os_env_name,omitempty"`
}

func (x *Data_Config) Reset() {
	*x = Data_Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_fwconf_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data_Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_Config) ProtoMessage() {}

func (x *Data_Config) ProtoReflect() protoreflect.Message {
	mi := &file_config_fwconf_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_Config.ProtoReflect.Descriptor instead.
func (*Data_Config) Descriptor() ([]byte, []int) {
	return file_config_fwconf_proto_rawDescGZIP(), []int{2, 2}
}

func (x *Data_Config) GetFormat() Data_Config_Format_Enums {
	if x != nil {
		return x.Format
	}
	return Data_Config_Format_Unknown
}

func (x *Data_Config) GetEtcdSources() []*Data_Config_EtcdSource {
	if x != nil {
		return x.EtcdSources
	}
	return nil
}

func (x *Data_Config) GetEnv() Data_Config_Env_Enums {
	if x != nil {
		return x.Env
	}
	return Data_Config_Env_Unknown
}

func (x *Data_Config) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Data_Config) GetModules() []string {
	if x != nil {
		return x.Modules
	}
	return nil
}

func (x *Data_Config) GetModulesBasePath() string {
	if x != nil {
		return x.ModulesBasePath
	}
	return ""
}

func (x *Data_Config) GetPreEnvDetectMethod() Data_Config_PreEnv_DetectMethod {
	if x != nil {
		return x.PreEnvDetectMethod
	}
	return Data_Config_PreEnv_Unknown
}

func (x *Data_Config) GetPreBasePath() string {
	if x != nil {
		return x.PreBasePath
	}
	return ""
}

func (x *Data_Config) GetPreOsEnvName() string {
	if x != nil {
		return x.PreOsEnvName
	}
	return ""
}

type Data_Config_SrcType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Data_Config_SrcType) Reset() {
	*x = Data_Config_SrcType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_fwconf_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data_Config_SrcType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_Config_SrcType) ProtoMessage() {}

func (x *Data_Config_SrcType) ProtoReflect() protoreflect.Message {
	mi := &file_config_fwconf_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_Config_SrcType.ProtoReflect.Descriptor instead.
func (*Data_Config_SrcType) Descriptor() ([]byte, []int) {
	return file_config_fwconf_proto_rawDescGZIP(), []int{2, 2, 0}
}

type Data_Config_Format struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Data_Config_Format) Reset() {
	*x = Data_Config_Format{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_fwconf_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data_Config_Format) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_Config_Format) ProtoMessage() {}

func (x *Data_Config_Format) ProtoReflect() protoreflect.Message {
	mi := &file_config_fwconf_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_Config_Format.ProtoReflect.Descriptor instead.
func (*Data_Config_Format) Descriptor() ([]byte, []int) {
	return file_config_fwconf_proto_rawDescGZIP(), []int{2, 2, 1}
}

type Data_Config_Env struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Data_Config_Env) Reset() {
	*x = Data_Config_Env{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_fwconf_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data_Config_Env) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_Config_Env) ProtoMessage() {}

func (x *Data_Config_Env) ProtoReflect() protoreflect.Message {
	mi := &file_config_fwconf_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_Config_Env.ProtoReflect.Descriptor instead.
func (*Data_Config_Env) Descriptor() ([]byte, []int) {
	return file_config_fwconf_proto_rawDescGZIP(), []int{2, 2, 2}
}

type Data_Config_EtcdSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//配置的绝对路径
	AbsolutePath string               `protobuf:"bytes,100,opt,name=absolute_path,json=absolutePath,proto3" json:"absolute_path,omitempty"`
	WithPrefix   bool                 `protobuf:"varint,200,opt,name=with_prefix,json=withPrefix,proto3" json:"with_prefix,omitempty"`
	Endpoints    []string             `protobuf:"bytes,300,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	DialTimeout  *durationpb.Duration `protobuf:"bytes,400,opt,name=dial_timeout,json=dialTimeout,proto3" json:"dial_timeout,omitempty"`
	//公共配置的路径是否使用命名空间
	UseNamespaceForCommon bool `protobuf:"varint,600,opt,name=use_namespace_for_common,json=useNamespaceForCommon,proto3" json:"use_namespace_for_common,omitempty"`
	//公共配置的绝对路径
	CommonAbsolutePath string `protobuf:"bytes,700,opt,name=common_absolute_path,json=commonAbsolutePath,proto3" json:"common_absolute_path,omitempty"`
}

func (x *Data_Config_EtcdSource) Reset() {
	*x = Data_Config_EtcdSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_fwconf_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data_Config_EtcdSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_Config_EtcdSource) ProtoMessage() {}

func (x *Data_Config_EtcdSource) ProtoReflect() protoreflect.Message {
	mi := &file_config_fwconf_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_Config_EtcdSource.ProtoReflect.Descriptor instead.
func (*Data_Config_EtcdSource) Descriptor() ([]byte, []int) {
	return file_config_fwconf_proto_rawDescGZIP(), []int{2, 2, 3}
}

func (x *Data_Config_EtcdSource) GetAbsolutePath() string {
	if x != nil {
		return x.AbsolutePath
	}
	return ""
}

func (x *Data_Config_EtcdSource) GetWithPrefix() bool {
	if x != nil {
		return x.WithPrefix
	}
	return false
}

func (x *Data_Config_EtcdSource) GetEndpoints() []string {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *Data_Config_EtcdSource) GetDialTimeout() *durationpb.Duration {
	if x != nil {
		return x.DialTimeout
	}
	return nil
}

func (x *Data_Config_EtcdSource) GetUseNamespaceForCommon() bool {
	if x != nil {
		return x.UseNamespaceForCommon
	}
	return false
}

func (x *Data_Config_EtcdSource) GetCommonAbsolutePath() string {
	if x != nil {
		return x.CommonAbsolutePath
	}
	return ""
}

//是否检测预发布环境
type Data_Config_PreEnv struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Data_Config_PreEnv) Reset() {
	*x = Data_Config_PreEnv{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_fwconf_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data_Config_PreEnv) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_Config_PreEnv) ProtoMessage() {}

func (x *Data_Config_PreEnv) ProtoReflect() protoreflect.Message {
	mi := &file_config_fwconf_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_Config_PreEnv.ProtoReflect.Descriptor instead.
func (*Data_Config_PreEnv) Descriptor() ([]byte, []int) {
	return file_config_fwconf_proto_rawDescGZIP(), []int{2, 2, 4}
}

//注册中心
type Service_Registry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *Service_Registry) Reset() {
	*x = Service_Registry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_fwconf_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service_Registry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service_Registry) ProtoMessage() {}

func (x *Service_Registry) ProtoReflect() protoreflect.Message {
	mi := &file_config_fwconf_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service_Registry.ProtoReflect.Descriptor instead.
func (*Service_Registry) Descriptor() ([]byte, []int) {
	return file_config_fwconf_proto_rawDescGZIP(), []int{3, 0}
}

func (x *Service_Registry) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type Service_Registrys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Consul   *Service_Registry `protobuf:"bytes,1,opt,name=consul,proto3" json:"consul,omitempty"`
	Etcd     *Service_Registry `protobuf:"bytes,2,opt,name=etcd,proto3" json:"etcd,omitempty"`
	Endpoint *Service_Registry `protobuf:"bytes,3,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
}

func (x *Service_Registrys) Reset() {
	*x = Service_Registrys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_fwconf_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service_Registrys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service_Registrys) ProtoMessage() {}

func (x *Service_Registrys) ProtoReflect() protoreflect.Message {
	mi := &file_config_fwconf_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service_Registrys.ProtoReflect.Descriptor instead.
func (*Service_Registrys) Descriptor() ([]byte, []int) {
	return file_config_fwconf_proto_rawDescGZIP(), []int{3, 1}
}

func (x *Service_Registrys) GetConsul() *Service_Registry {
	if x != nil {
		return x.Consul
	}
	return nil
}

func (x *Service_Registrys) GetEtcd() *Service_Registry {
	if x != nil {
		return x.Etcd
	}
	return nil
}

func (x *Service_Registrys) GetEndpoint() *Service_Registry {
	if x != nil {
		return x.Endpoint
	}
	return nil
}

//追踪
type Service_Trace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoint string `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
}

func (x *Service_Trace) Reset() {
	*x = Service_Trace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_fwconf_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service_Trace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service_Trace) ProtoMessage() {}

func (x *Service_Trace) ProtoReflect() protoreflect.Message {
	mi := &file_config_fwconf_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service_Trace.ProtoReflect.Descriptor instead.
func (*Service_Trace) Descriptor() ([]byte, []int) {
	return file_config_fwconf_proto_rawDescGZIP(), []int{3, 2}
}

func (x *Service_Trace) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

type Service_Traces struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Open   bool           `protobuf:"varint,1,opt,name=open,proto3" json:"open,omitempty"`
	Jaeger *Service_Trace `protobuf:"bytes,2,opt,name=jaeger,proto3" json:"jaeger,omitempty"`
}

func (x *Service_Traces) Reset() {
	*x = Service_Traces{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_fwconf_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service_Traces) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service_Traces) ProtoMessage() {}

func (x *Service_Traces) ProtoReflect() protoreflect.Message {
	mi := &file_config_fwconf_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service_Traces.ProtoReflect.Descriptor instead.
func (*Service_Traces) Descriptor() ([]byte, []int) {
	return file_config_fwconf_proto_rawDescGZIP(), []int{3, 3}
}

func (x *Service_Traces) GetOpen() bool {
	if x != nil {
		return x.Open
	}
	return false
}

func (x *Service_Traces) GetJaeger() *Service_Trace {
	if x != nil {
		return x.Jaeger
	}
	return nil
}

//预警
type Service_WorkWechat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hook  string `protobuf:"bytes,1,opt,name=hook,proto3" json:"hook,omitempty"`
	Debug bool   `protobuf:"varint,2,opt,name=debug,proto3" json:"debug,omitempty"`
}

func (x *Service_WorkWechat) Reset() {
	*x = Service_WorkWechat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_fwconf_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service_WorkWechat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service_WorkWechat) ProtoMessage() {}

func (x *Service_WorkWechat) ProtoReflect() protoreflect.Message {
	mi := &file_config_fwconf_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service_WorkWechat.ProtoReflect.Descriptor instead.
func (*Service_WorkWechat) Descriptor() ([]byte, []int) {
	return file_config_fwconf_proto_rawDescGZIP(), []int{3, 4}
}

func (x *Service_WorkWechat) GetHook() string {
	if x != nil {
		return x.Hook
	}
	return ""
}

func (x *Service_WorkWechat) GetDebug() bool {
	if x != nil {
		return x.Debug
	}
	return false
}

type Service_Alert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkWechat *Service_WorkWechat   `protobuf:"bytes,1,opt,name=work_wechat,json=workWechat,proto3" json:"work_wechat,omitempty"`
	Feishu     *Service_Alert_Feishu `protobuf:"bytes,2,opt,name=feishu,proto3" json:"feishu,omitempty"`
}

func (x *Service_Alert) Reset() {
	*x = Service_Alert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_fwconf_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service_Alert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service_Alert) ProtoMessage() {}

func (x *Service_Alert) ProtoReflect() protoreflect.Message {
	mi := &file_config_fwconf_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service_Alert.ProtoReflect.Descriptor instead.
func (*Service_Alert) Descriptor() ([]byte, []int) {
	return file_config_fwconf_proto_rawDescGZIP(), []int{3, 5}
}

func (x *Service_Alert) GetWorkWechat() *Service_WorkWechat {
	if x != nil {
		return x.WorkWechat
	}
	return nil
}

func (x *Service_Alert) GetFeishu() *Service_Alert_Feishu {
	if x != nil {
		return x.Feishu
	}
	return nil
}

//网关地址
type Service_Gateway struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr     string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	AdminKey string `protobuf:"bytes,2,opt,name=admin_key,json=adminKey,proto3" json:"admin_key,omitempty"`
}

func (x *Service_Gateway) Reset() {
	*x = Service_Gateway{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_fwconf_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service_Gateway) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service_Gateway) ProtoMessage() {}

func (x *Service_Gateway) ProtoReflect() protoreflect.Message {
	mi := &file_config_fwconf_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service_Gateway.ProtoReflect.Descriptor instead.
func (*Service_Gateway) Descriptor() ([]byte, []int) {
	return file_config_fwconf_proto_rawDescGZIP(), []int{3, 6}
}

func (x *Service_Gateway) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Service_Gateway) GetAdminKey() string {
	if x != nil {
		return x.AdminKey
	}
	return ""
}

type Service_Gateways struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Apisix *Service_Gateway `protobuf:"bytes,1,opt,name=apisix,proto3" json:"apisix,omitempty"`
	Kong   *Service_Gateway `protobuf:"bytes,2,opt,name=kong,proto3" json:"kong,omitempty"`
}

func (x *Service_Gateways) Reset() {
	*x = Service_Gateways{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_fwconf_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service_Gateways) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service_Gateways) ProtoMessage() {}

func (x *Service_Gateways) ProtoReflect() protoreflect.Message {
	mi := &file_config_fwconf_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service_Gateways.ProtoReflect.Descriptor instead.
func (*Service_Gateways) Descriptor() ([]byte, []int) {
	return file_config_fwconf_proto_rawDescGZIP(), []int{3, 7}
}

func (x *Service_Gateways) GetApisix() *Service_Gateway {
	if x != nil {
		return x.Apisix
	}
	return nil
}

func (x *Service_Gateways) GetKong() *Service_Gateway {
	if x != nil {
		return x.Kong
	}
	return nil
}

type Service_Cors struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllowOriginList  []string `protobuf:"bytes,10,rep,name=allow_origin_list,json=allowOriginList,proto3" json:"allow_origin_list,omitempty"`
	AllowHeaders     []string `protobuf:"bytes,20,rep,name=allow_headers,json=allowHeaders,proto3" json:"allow_headers,omitempty"`
	AllowHeadersMode uint32   `protobuf:"varint,30,opt,name=allow_headers_mode,json=allowHeadersMode,proto3" json:"allow_headers_mode,omitempty"` //0为不设置/默认，1为追加，2为覆盖，此模式下allow_headers为空列表也会进行覆盖
	AllowMethods     []string `protobuf:"bytes,90,rep,name=allow_methods,json=allowMethods,proto3" json:"allow_methods,omitempty"`
	AllowCredentials uint32   `protobuf:"varint,100,opt,name=allow_credentials,json=allowCredentials,proto3" json:"allow_credentials,omitempty"` //0为不设置/默认，1为true，2为false
}

func (x *Service_Cors) Reset() {
	*x = Service_Cors{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_fwconf_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service_Cors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service_Cors) ProtoMessage() {}

func (x *Service_Cors) ProtoReflect() protoreflect.Message {
	mi := &file_config_fwconf_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service_Cors.ProtoReflect.Descriptor instead.
func (*Service_Cors) Descriptor() ([]byte, []int) {
	return file_config_fwconf_proto_rawDescGZIP(), []int{3, 8}
}

func (x *Service_Cors) GetAllowOriginList() []string {
	if x != nil {
		return x.AllowOriginList
	}
	return nil
}

func (x *Service_Cors) GetAllowHeaders() []string {
	if x != nil {
		return x.AllowHeaders
	}
	return nil
}

func (x *Service_Cors) GetAllowHeadersMode() uint32 {
	if x != nil {
		return x.AllowHeadersMode
	}
	return 0
}

func (x *Service_Cors) GetAllowMethods() []string {
	if x != nil {
		return x.AllowMethods
	}
	return nil
}

func (x *Service_Cors) GetAllowCredentials() uint32 {
	if x != nil {
		return x.AllowCredentials
	}
	return 0
}

type Service_Log struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Storage     []Service_Log_STORAGE_TYPE `protobuf:"varint,100,rep,packed,name=storage,proto3,enum=conf.Service_Log_STORAGE_TYPE" json:"storage,omitempty"`
	File        *Service_Log_File          `protobuf:"bytes,200,opt,name=file,proto3" json:"file,omitempty"`
	ES          *Service_Log_ES            `protobuf:"bytes,300,opt,name=e_s,json=eS,proto3" json:"e_s,omitempty"`
	StdOut      *Service_Log_StdOut        `protobuf:"bytes,400,opt,name=std_out,json=stdOut,proto3" json:"std_out,omitempty"`
	UseZlogger  bool                       `protobuf:"varint,500,opt,name=use_zlogger,json=useZlogger,proto3" json:"use_zlogger,omitempty"`
	EnableLevel Service_Log_LogLevel_TYPE  `protobuf:"varint,600,opt,name=enable_level,json=enableLevel,proto3,enum=conf.Service_Log_LogLevel_TYPE" json:"enable_level,omitempty"`
}

func (x *Service_Log) Reset() {
	*x = Service_Log{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_fwconf_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service_Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service_Log) ProtoMessage() {}

func (x *Service_Log) ProtoReflect() protoreflect.Message {
	mi := &file_config_fwconf_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service_Log.ProtoReflect.Descriptor instead.
func (*Service_Log) Descriptor() ([]byte, []int) {
	return file_config_fwconf_proto_rawDescGZIP(), []int{3, 9}
}

func (x *Service_Log) GetStorage() []Service_Log_STORAGE_TYPE {
	if x != nil {
		return x.Storage
	}
	return nil
}

func (x *Service_Log) GetFile() *Service_Log_File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *Service_Log) GetES() *Service_Log_ES {
	if x != nil {
		return x.ES
	}
	return nil
}

func (x *Service_Log) GetStdOut() *Service_Log_StdOut {
	if x != nil {
		return x.StdOut
	}
	return nil
}

func (x *Service_Log) GetUseZlogger() bool {
	if x != nil {
		return x.UseZlogger
	}
	return false
}

func (x *Service_Log) GetEnableLevel() Service_Log_LogLevel_TYPE {
	if x != nil {
		return x.EnableLevel
	}
	return Service_Log_LogLevel_Unknown
}

type Service_AuthMethod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Service_AuthMethod) Reset() {
	*x = Service_AuthMethod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_fwconf_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service_AuthMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service_AuthMethod) ProtoMessage() {}

func (x *Service_AuthMethod) ProtoReflect() protoreflect.Message {
	mi := &file_config_fwconf_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service_AuthMethod.ProtoReflect.Descriptor instead.
func (*Service_AuthMethod) Descriptor() ([]byte, []int) {
	return file_config_fwconf_proto_rawDescGZIP(), []int{3, 10}
}

type Service_Sdn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProxyUrl string `protobuf:"bytes,1,opt,name=proxy_url,json=proxyUrl,proto3" json:"proxy_url,omitempty"`
}

func (x *Service_Sdn) Reset() {
	*x = Service_Sdn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_fwconf_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service_Sdn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service_Sdn) ProtoMessage() {}

func (x *Service_Sdn) ProtoReflect() protoreflect.Message {
	mi := &file_config_fwconf_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service_Sdn.ProtoReflect.Descriptor instead.
func (*Service_Sdn) Descriptor() ([]byte, []int) {
	return file_config_fwconf_proto_rawDescGZIP(), []int{3, 11}
}

func (x *Service_Sdn) GetProxyUrl() string {
	if x != nil {
		return x.ProxyUrl
	}
	return ""
}

type Service_DependencySvc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoints    []string `protobuf:"bytes,1,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	DirectlyPath bool     `protobuf:"varint,2,opt,name=directly_path,json=directlyPath,proto3" json:"directly_path,omitempty"`
	UseSdnProxy  bool     `protobuf:"varint,3,opt,name=use_sdn_proxy,json=useSdnProxy,proto3" json:"use_sdn_proxy,omitempty"`
}

func (x *Service_DependencySvc) Reset() {
	*x = Service_DependencySvc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_fwconf_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service_DependencySvc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service_DependencySvc) ProtoMessage() {}

func (x *Service_DependencySvc) ProtoReflect() protoreflect.Message {
	mi := &file_config_fwconf_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service_DependencySvc.ProtoReflect.Descriptor instead.
func (*Service_DependencySvc) Descriptor() ([]byte, []int) {
	return file_config_fwconf_proto_rawDescGZIP(), []int{3, 12}
}

func (x *Service_DependencySvc) GetEndpoints() []string {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *Service_DependencySvc) GetDirectlyPath() bool {
	if x != nil {
		return x.DirectlyPath
	}
	return false
}

func (x *Service_DependencySvc) GetUseSdnProxy() bool {
	if x != nil {
		return x.UseSdnProxy
	}
	return false
}

type Service_Alert_Feishu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hook  string `protobuf:"bytes,1,opt,name=hook,proto3" json:"hook,omitempty"`
	Debug bool   `protobuf:"varint,2,opt,name=debug,proto3" json:"debug,omitempty"`
}

func (x *Service_Alert_Feishu) Reset() {
	*x = Service_Alert_Feishu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_fwconf_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service_Alert_Feishu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service_Alert_Feishu) ProtoMessage() {}

func (x *Service_Alert_Feishu) ProtoReflect() protoreflect.Message {
	mi := &file_config_fwconf_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service_Alert_Feishu.ProtoReflect.Descriptor instead.
func (*Service_Alert_Feishu) Descriptor() ([]byte, []int) {
	return file_config_fwconf_proto_rawDescGZIP(), []int{3, 5, 0}
}

func (x *Service_Alert_Feishu) GetHook() string {
	if x != nil {
		return x.Hook
	}
	return ""
}

func (x *Service_Alert_Feishu) GetDebug() bool {
	if x != nil {
		return x.Debug
	}
	return false
}

type Service_Log_LogLevel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Service_Log_LogLevel) Reset() {
	*x = Service_Log_LogLevel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_fwconf_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service_Log_LogLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service_Log_LogLevel) ProtoMessage() {}

func (x *Service_Log_LogLevel) ProtoReflect() protoreflect.Message {
	mi := &file_config_fwconf_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service_Log_LogLevel.ProtoReflect.Descriptor instead.
func (*Service_Log_LogLevel) Descriptor() ([]byte, []int) {
	return file_config_fwconf_proto_rawDescGZIP(), []int{3, 9, 0}
}

type Service_Log_STORAGE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Service_Log_STORAGE) Reset() {
	*x = Service_Log_STORAGE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_fwconf_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service_Log_STORAGE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service_Log_STORAGE) ProtoMessage() {}

func (x *Service_Log_STORAGE) ProtoReflect() protoreflect.Message {
	mi := &file_config_fwconf_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service_Log_STORAGE.ProtoReflect.Descriptor instead.
func (*Service_Log_STORAGE) Descriptor() ([]byte, []int) {
	return file_config_fwconf_proto_rawDescGZIP(), []int{3, 9, 1}
}

type Service_Log_File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasePath    string                    `protobuf:"bytes,1,opt,name=base_path,json=basePath,proto3" json:"base_path,omitempty"`
	EnableLevel Service_Log_LogLevel_TYPE `protobuf:"varint,4,opt,name=enable_level,json=enableLevel,proto3,enum=conf.Service_Log_LogLevel_TYPE" json:"enable_level,omitempty"`
}

func (x *Service_Log_File) Reset() {
	*x = Service_Log_File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_fwconf_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service_Log_File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service_Log_File) ProtoMessage() {}

func (x *Service_Log_File) ProtoReflect() protoreflect.Message {
	mi := &file_config_fwconf_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service_Log_File.ProtoReflect.Descriptor instead.
func (*Service_Log_File) Descriptor() ([]byte, []int) {
	return file_config_fwconf_proto_rawDescGZIP(), []int{3, 9, 2}
}

func (x *Service_Log_File) GetBasePath() string {
	if x != nil {
		return x.BasePath
	}
	return ""
}

func (x *Service_Log_File) GetEnableLevel() Service_Log_LogLevel_TYPE {
	if x != nil {
		return x.EnableLevel
	}
	return Service_Log_LogLevel_Unknown
}

type Service_Log_ES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addrs       []string                  `protobuf:"bytes,1,rep,name=addrs,proto3" json:"addrs,omitempty"`
	Username    string                    `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password    string                    `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	EnableLevel Service_Log_LogLevel_TYPE `protobuf:"varint,4,opt,name=enable_level,json=enableLevel,proto3,enum=conf.Service_Log_LogLevel_TYPE" json:"enable_level,omitempty"`
}

func (x *Service_Log_ES) Reset() {
	*x = Service_Log_ES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_fwconf_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service_Log_ES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service_Log_ES) ProtoMessage() {}

func (x *Service_Log_ES) ProtoReflect() protoreflect.Message {
	mi := &file_config_fwconf_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service_Log_ES.ProtoReflect.Descriptor instead.
func (*Service_Log_ES) Descriptor() ([]byte, []int) {
	return file_config_fwconf_proto_rawDescGZIP(), []int{3, 9, 3}
}

func (x *Service_Log_ES) GetAddrs() []string {
	if x != nil {
		return x.Addrs
	}
	return nil
}

func (x *Service_Log_ES) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Service_Log_ES) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Service_Log_ES) GetEnableLevel() Service_Log_LogLevel_TYPE {
	if x != nil {
		return x.EnableLevel
	}
	return Service_Log_LogLevel_Unknown
}

type Service_Log_StdOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnableLevel Service_Log_LogLevel_TYPE `protobuf:"varint,4,opt,name=enable_level,json=enableLevel,proto3,enum=conf.Service_Log_LogLevel_TYPE" json:"enable_level,omitempty"`
}

func (x *Service_Log_StdOut) Reset() {
	*x = Service_Log_StdOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_fwconf_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service_Log_StdOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service_Log_StdOut) ProtoMessage() {}

func (x *Service_Log_StdOut) ProtoReflect() protoreflect.Message {
	mi := &file_config_fwconf_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service_Log_StdOut.ProtoReflect.Descriptor instead.
func (*Service_Log_StdOut) Descriptor() ([]byte, []int) {
	return file_config_fwconf_proto_rawDescGZIP(), []int{3, 9, 4}
}

func (x *Service_Log_StdOut) GetEnableLevel() Service_Log_LogLevel_TYPE {
	if x != nil {
		return x.EnableLevel
	}
	return Service_Log_LogLevel_Unknown
}

var File_config_fwconf_proto protoreflect.FileDescriptor

var file_config_fwconf_proto_rawDesc = []byte{
	0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x66, 0x77, 0x63, 0x6f, 0x6e, 0x66, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x63, 0x6f, 0x6e, 0x66, 0x1a, 0x1e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7a, 0x0a, 0x09, 0x42,
	0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x12, 0x24, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1e,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x27,
	0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0xb8, 0x06, 0x0a, 0x06, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x12, 0x25, 0x0a, 0x04, 0x68, 0x74, 0x74, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x48,
	0x54, 0x54, 0x50, 0x52, 0x04, 0x68, 0x74, 0x74, 0x70, 0x12, 0x25, 0x0a, 0x04, 0x67, 0x72, 0x70,
	0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x52, 0x50, 0x43, 0x52, 0x04, 0x67, 0x72, 0x70, 0x63,
	0x12, 0x25, 0x0a, 0x04, 0x70, 0x72, 0x6f, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f,
	0x66, 0x52, 0x04, 0x70, 0x72, 0x6f, 0x66, 0x12, 0x2e, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x52, 0x07,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x12, 0x2e, 0x0a, 0x07, 0x6d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x07,
	0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x1a, 0x69, 0x0a, 0x04, 0x48, 0x54, 0x54, 0x50, 0x12,
	0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x33, 0x0a,
	0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x1a, 0x69, 0x0a, 0x04, 0x47, 0x52, 0x50, 0x43, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x33, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x1a, 0x7d, 0x0a,
	0x04, 0x50, 0x72, 0x6f, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x33, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x1a, 0x80, 0x01, 0x0a,
	0x07, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x33, 0x0a, 0x07, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x1a,
	0x80, 0x01, 0x0a, 0x07, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6f,
	0x70, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x33, 0x0a,
	0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x22, 0x85, 0x0b, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2f, 0x0a, 0x08, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x05,
	0x72, 0x65, 0x64, 0x69, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x52, 0x65, 0x64, 0x69, 0x73, 0x52, 0x05, 0x72,
	0x65, 0x64, 0x69, 0x73, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0xac,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x1a, 0x3a, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x1a, 0xcf, 0x01, 0x0a,
	0x05, 0x52, 0x65, 0x64, 0x69, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x61, 0x64, 0x64, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x3c, 0x0a, 0x0c, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x3e,
	0x0a, 0x0d, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0c, 0x77, 0x72, 0x69, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x1a, 0xe9,
	0x07, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x37, 0x0a, 0x06, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x73, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x12, 0x40, 0x0a, 0x0c, 0x65, 0x74, 0x63, 0x64, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x18, 0xac, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x45, 0x74, 0x63,
	0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0b, 0x65, 0x74, 0x63, 0x64, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x90, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x45, 0x6e, 0x76, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x73, 0x52,
	0x03, 0x65, 0x6e, 0x76, 0x12, 0x1d, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0xf4, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0xd8,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x2b,
	0x0a, 0x11, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0xbc, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x73, 0x42, 0x61, 0x73, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x59, 0x0a, 0x15, 0x70,
	0x72, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x5f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x5f, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x18, 0xa0, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x50,
	0x72, 0x65, 0x45, 0x6e, 0x76, 0x2e, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x52, 0x12, 0x70, 0x72, 0x65, 0x45, 0x6e, 0x76, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x65, 0x5f, 0x62, 0x61,
	0x73, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x84, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x72, 0x65, 0x42, 0x61, 0x73, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x26, 0x0a, 0x0f, 0x70,
	0x72, 0x65, 0x5f, 0x6f, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0xe8,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x4f, 0x73, 0x45, 0x6e, 0x76, 0x4e,
	0x61, 0x6d, 0x65, 0x1a, 0x3f, 0x0a, 0x07, 0x53, 0x72, 0x63, 0x54, 0x79, 0x70, 0x65, 0x22, 0x34,
	0x0a, 0x05, 0x45, 0x6e, 0x75, 0x6d, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x10, 0x01, 0x12, 0x08,
	0x0a, 0x04, 0x45, 0x74, 0x63, 0x64, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x70, 0x6f, 0x6c,
	0x6c, 0x6f, 0x10, 0x03, 0x1a, 0x32, 0x0a, 0x06, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0x28,
	0x0a, 0x05, 0x45, 0x6e, 0x75, 0x6d, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x59, 0x61, 0x6d, 0x6c, 0x10, 0x01, 0x12, 0x08,
	0x0a, 0x04, 0x4a, 0x73, 0x6f, 0x6e, 0x10, 0x02, 0x1a, 0x5d, 0x0a, 0x03, 0x45, 0x6e, 0x76, 0x22,
	0x56, 0x0a, 0x05, 0x45, 0x6e, 0x75, 0x6d, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x10, 0x64,
	0x12, 0x08, 0x0a, 0x03, 0x44, 0x65, 0x76, 0x10, 0xc8, 0x01, 0x12, 0x09, 0x0a, 0x04, 0x54, 0x65,
	0x73, 0x74, 0x10, 0xac, 0x02, 0x12, 0x0a, 0x0a, 0x05, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x10, 0x90,
	0x03, 0x12, 0x09, 0x0a, 0x04, 0x42, 0x65, 0x74, 0x61, 0x10, 0xf4, 0x03, 0x12, 0x09, 0x0a, 0x04,
	0x50, 0x72, 0x6f, 0x64, 0x10, 0xd8, 0x04, 0x1a, 0x9e, 0x02, 0x0a, 0x0a, 0x45, 0x74, 0x63, 0x64,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x62, 0x73, 0x6f, 0x6c, 0x75,
	0x74, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61,
	0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x77,
	0x69, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x77, 0x69, 0x74, 0x68, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x1d, 0x0a,
	0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0xac, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x0c,
	0x64, 0x69, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x90, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b,
	0x64, 0x69, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x38, 0x0a, 0x18, 0x75,
	0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x66, 0x6f, 0x72,
	0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0xd8, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15,
	0x75, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x46, 0x6f, 0x72, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f,
	0x61, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0xbc, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x62, 0x73, 0x6f,
	0x6c, 0x75, 0x74, 0x65, 0x50, 0x61, 0x74, 0x68, 0x1a, 0x30, 0x0a, 0x06, 0x50, 0x72, 0x65, 0x45,
	0x6e, 0x76, 0x22, 0x26, 0x0a, 0x0c, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12,
	0x09, 0x0a, 0x05, 0x4f, 0x53, 0x45, 0x6e, 0x76, 0x10, 0x64, 0x22, 0xef, 0x17, 0x0a, 0x07, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x6b, 0x38, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6b, 0x38, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x79, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12,
	0x27, 0x0a, 0x0f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x35, 0x0a, 0x09, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x73, 0x52, 0x09, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x73, 0x12,
	0x2c, 0x0a, 0x06, 0x74, 0x72, 0x61, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54,
	0x72, 0x61, 0x63, 0x65, 0x73, 0x52, 0x06, 0x74, 0x72, 0x61, 0x63, 0x65, 0x73, 0x12, 0x29, 0x0a,
	0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x52, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x32, 0x0a, 0x08, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x73, 0x52, 0x08, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x73, 0x12, 0x2a, 0x0a, 0x11,
	0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x63, 0x6f, 0x72, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x72, 0x73, 0x52, 0x04, 0x63, 0x6f, 0x72, 0x73,
	0x12, 0x23, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x67,
	0x52, 0x03, 0x6c, 0x6f, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x18, 0xac, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x63, 0x6c,
	0x6f, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x2f, 0x0a, 0x13, 0x69, 0x6e, 0x5f,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x18, 0x90, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x49, 0x0a, 0x10, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0xf4,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x2e,
	0x45, 0x6e, 0x75, 0x6d, 0x73, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x47, 0x0a, 0x0f, 0x73, 0x76, 0x63, 0x5f, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0xd8, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1e, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x73, 0x52,
	0x0d, 0x73, 0x76, 0x63, 0x41, 0x75, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x24,
	0x0a, 0x03, 0x73, 0x64, 0x6e, 0x18, 0xbc, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x64, 0x6e, 0x52,
	0x03, 0x73, 0x64, 0x6e, 0x12, 0x64, 0x0a, 0x18, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e,
	0x63, 0x79, 0x5f, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x18, 0xa0, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63,
	0x79, 0x48, 0x74, 0x74, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x16, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x48, 0x74,
	0x74, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x0d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x84, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x6c, 0x69, 0x61,
	0x73, 0x1a, 0x1e, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64,
	0x72, 0x1a, 0x9b, 0x01, 0x0a, 0x09, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x73, 0x12,
	0x2e, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6c, 0x12,
	0x2a, 0x0a, 0x04, 0x65, 0x74, 0x63, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x52, 0x04, 0x65, 0x74, 0x63, 0x64, 0x12, 0x32, 0x0a, 0x08, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x1a,
	0x23, 0x0a, 0x05, 0x54, 0x72, 0x61, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x1a, 0x49, 0x0a, 0x06, 0x54, 0x72, 0x61, 0x63, 0x65, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6f, 0x70,
	0x65, 0x6e, 0x12, 0x2b, 0x0a, 0x06, 0x6a, 0x61, 0x65, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x65, 0x52, 0x06, 0x6a, 0x61, 0x65, 0x67, 0x65, 0x72, 0x1a,
	0x36, 0x0a, 0x0a, 0x57, 0x6f, 0x72, 0x6b, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x6f, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x6f,
	0x6b, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x1a, 0xaa, 0x01, 0x0a, 0x05, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x12, 0x39, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74,
	0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x12, 0x32, 0x0a, 0x06,
	0x66, 0x65, 0x69, 0x73, 0x68, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x2e, 0x46, 0x65, 0x69, 0x73, 0x68, 0x75, 0x52, 0x06, 0x66, 0x65, 0x69, 0x73, 0x68, 0x75,
	0x1a, 0x32, 0x0a, 0x06, 0x46, 0x65, 0x69, 0x73, 0x68, 0x75, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f,
	0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x6f, 0x6b, 0x12, 0x14,
	0x0a, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x64,
	0x65, 0x62, 0x75, 0x67, 0x1a, 0x3a, 0x0a, 0x07, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61,
	0x64, 0x64, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x4b, 0x65, 0x79,
	0x1a, 0x64, 0x0a, 0x08, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x73, 0x12, 0x2d, 0x0a, 0x06,
	0x61, 0x70, 0x69, 0x73, 0x69, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x52, 0x06, 0x61, 0x70, 0x69, 0x73, 0x69, 0x78, 0x12, 0x29, 0x0a, 0x04, 0x6b,
	0x6f, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x52, 0x04, 0x6b, 0x6f, 0x6e, 0x67, 0x1a, 0xd7, 0x01, 0x0a, 0x04, 0x43, 0x6f, 0x72, 0x73, 0x12,
	0x2a, 0x0a, 0x11, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x14, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x12, 0x2c, 0x0a, 0x12, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x18,
	0x5a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x63, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10,
	0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73,
	0x1a, 0x9f, 0x06, 0x0a, 0x03, 0x4c, 0x6f, 0x67, 0x12, 0x38, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x18, 0x64, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x2e, 0x53, 0x54, 0x4f,
	0x52, 0x41, 0x47, 0x45, 0x2e, 0x54, 0x59, 0x50, 0x45, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4c, 0x6f, 0x67, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12,
	0x26, 0x0a, 0x03, 0x65, 0x5f, 0x73, 0x18, 0xac, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x67,
	0x2e, 0x45, 0x53, 0x52, 0x02, 0x65, 0x53, 0x12, 0x32, 0x0a, 0x07, 0x73, 0x74, 0x64, 0x5f, 0x6f,
	0x75, 0x74, 0x18, 0x90, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x2e, 0x53, 0x74, 0x64,
	0x4f, 0x75, 0x74, 0x52, 0x06, 0x73, 0x74, 0x64, 0x4f, 0x75, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x75,
	0x73, 0x65, 0x5f, 0x7a, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x18, 0xf4, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x5a, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x12, 0x43, 0x0a,
	0x0c, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0xd8, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x2e, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x2e, 0x54, 0x59, 0x50, 0x45, 0x52, 0x0b, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x1a, 0x5f, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x53,
	0x0a, 0x04, 0x54, 0x59, 0x50, 0x45, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x65, 0x62, 0x75, 0x67, 0x10, 0x01, 0x12, 0x08,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x57, 0x61, 0x72, 0x6e,
	0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x04, 0x12, 0x09, 0x0a,
	0x05, 0x50, 0x61, 0x6e, 0x69, 0x63, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x61, 0x74, 0x61,
	0x6c, 0x10, 0x06, 0x1a, 0x3d, 0x0a, 0x07, 0x53, 0x54, 0x4f, 0x52, 0x41, 0x47, 0x45, 0x22, 0x32,
	0x0a, 0x04, 0x54, 0x59, 0x50, 0x45, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x49, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x06, 0x0a,
	0x02, 0x45, 0x53, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x54, 0x44, 0x5f, 0x4f, 0x55, 0x54,
	0x10, 0x03, 0x1a, 0x67, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61,
	0x73, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62,
	0x61, 0x73, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x42, 0x0a, 0x0c, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x67,
	0x2e, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x2e, 0x54, 0x59, 0x50, 0x45, 0x52, 0x0b,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x1a, 0x96, 0x01, 0x0a, 0x02,
	0x45, 0x53, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64, 0x64, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x61, 0x64, 0x64, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x42, 0x0a, 0x0c, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x2e, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x2e, 0x54, 0x59, 0x50, 0x45, 0x52, 0x0b, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x1a, 0x4c, 0x0a, 0x06, 0x53, 0x74, 0x64, 0x4f, 0x75, 0x74, 0x12, 0x42,
	0x0a, 0x0c, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x2e, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x2e, 0x54, 0x59, 0x50, 0x45, 0x52, 0x0b, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x1a, 0x33, 0x0a, 0x0a, 0x41, 0x75, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x22, 0x25, 0x0a, 0x05, 0x45, 0x6e, 0x75, 0x6d, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x75, 0x74, 0x73, 0x69, 0x64,
	0x65, 0x48, 0x74, 0x74, 0x70, 0x10, 0x02, 0x1a, 0x22, 0x0a, 0x03, 0x53, 0x64, 0x6e, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x55, 0x72, 0x6c, 0x1a, 0x76, 0x0a, 0x0d, 0x44,
	0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x76, 0x63, 0x12, 0x1c, 0x0a, 0x09,
	0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6c, 0x79, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6c, 0x79, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x22, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x64, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x53, 0x64, 0x6e, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x1a, 0x66, 0x0a, 0x1b, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63,
	0x79, 0x48, 0x74, 0x74, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x76, 0x63,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3f, 0x0a, 0x11, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x2d, 0x5a, 0x2b,
	0x67, 0x6c, 0x2e, 0x7a, 0x65, 0x67, 0x6f, 0x2e, 0x69, 0x6d, 0x2f, 0x62, 0x6f, 0x73, 0x73, 0x2d,
	0x6c, 0x69, 0x62, 0x2f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x3b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_config_fwconf_proto_rawDescOnce sync.Once
	file_config_fwconf_proto_rawDescData = file_config_fwconf_proto_rawDesc
)

func file_config_fwconf_proto_rawDescGZIP() []byte {
	file_config_fwconf_proto_rawDescOnce.Do(func() {
		file_config_fwconf_proto_rawDescData = protoimpl.X.CompressGZIP(file_config_fwconf_proto_rawDescData)
	})
	return file_config_fwconf_proto_rawDescData
}

var file_config_fwconf_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_config_fwconf_proto_msgTypes = make([]protoimpl.MessageInfo, 38)
var file_config_fwconf_proto_goTypes = []interface{}{
	(Data_Config_SrcType_Enums)(0),       // 0: conf.Data.Config.SrcType.Enums
	(Data_Config_Format_Enums)(0),        // 1: conf.Data.Config.Format.Enums
	(Data_Config_Env_Enums)(0),           // 2: conf.Data.Config.Env.Enums
	(Data_Config_PreEnv_DetectMethod)(0), // 3: conf.Data.Config.PreEnv.DetectMethod
	(Service_Log_LogLevel_TYPE)(0),       // 4: conf.Service.Log.LogLevel.TYPE
	(Service_Log_STORAGE_TYPE)(0),        // 5: conf.Service.Log.STORAGE.TYPE
	(Service_AuthMethod_Enums)(0),        // 6: conf.Service.AuthMethod.Enums
	(*Bootstrap)(nil),                    // 7: conf.Bootstrap
	(*Server)(nil),                       // 8: conf.Server
	(*Data)(nil),                         // 9: conf.Data
	(*Service)(nil),                      // 10: conf.Service
	(*Server_HTTP)(nil),                  // 11: conf.Server.HTTP
	(*Server_GRPC)(nil),                  // 12: conf.Server.GRPC
	(*Server_Prof)(nil),                  // 13: conf.Server.Prof
	(*Server_Healthy)(nil),               // 14: conf.Server.Healthy
	(*Server_Monitor)(nil),               // 15: conf.Server.Monitor
	(*Data_Database)(nil),                // 16: conf.Data.Database
	(*Data_Redis)(nil),                   // 17: conf.Data.Redis
	(*Data_Config)(nil),                  // 18: conf.Data.Config
	(*Data_Config_SrcType)(nil),          // 19: conf.Data.Config.SrcType
	(*Data_Config_Format)(nil),           // 20: conf.Data.Config.Format
	(*Data_Config_Env)(nil),              // 21: conf.Data.Config.Env
	(*Data_Config_EtcdSource)(nil),       // 22: conf.Data.Config.EtcdSource
	(*Data_Config_PreEnv)(nil),           // 23: conf.Data.Config.PreEnv
	(*Service_Registry)(nil),             // 24: conf.Service.Registry
	(*Service_Registrys)(nil),            // 25: conf.Service.Registrys
	(*Service_Trace)(nil),                // 26: conf.Service.Trace
	(*Service_Traces)(nil),               // 27: conf.Service.Traces
	(*Service_WorkWechat)(nil),           // 28: conf.Service.WorkWechat
	(*Service_Alert)(nil),                // 29: conf.Service.Alert
	(*Service_Gateway)(nil),              // 30: conf.Service.Gateway
	(*Service_Gateways)(nil),             // 31: conf.Service.Gateways
	(*Service_Cors)(nil),                 // 32: conf.Service.Cors
	(*Service_Log)(nil),                  // 33: conf.Service.Log
	(*Service_AuthMethod)(nil),           // 34: conf.Service.AuthMethod
	(*Service_Sdn)(nil),                  // 35: conf.Service.Sdn
	(*Service_DependencySvc)(nil),        // 36: conf.Service.DependencySvc
	nil,                                  // 37: conf.Service.DependencyHttpServicesEntry
	nil,                                  // 38: conf.Service.ServiceAliasEntry
	(*Service_Alert_Feishu)(nil),         // 39: conf.Service.Alert.Feishu
	(*Service_Log_LogLevel)(nil),         // 40: conf.Service.Log.LogLevel
	(*Service_Log_STORAGE)(nil),          // 41: conf.Service.Log.STORAGE
	(*Service_Log_File)(nil),             // 42: conf.Service.Log.File
	(*Service_Log_ES)(nil),               // 43: conf.Service.Log.ES
	(*Service_Log_StdOut)(nil),           // 44: conf.Service.Log.StdOut
	(*durationpb.Duration)(nil),          // 45: google.protobuf.Duration
}
var file_config_fwconf_proto_depIdxs = []int32{
	8,  // 0: conf.Bootstrap.server:type_name -> conf.Server
	9,  // 1: conf.Bootstrap.data:type_name -> conf.Data
	10, // 2: conf.Bootstrap.service:type_name -> conf.Service
	11, // 3: conf.Server.http:type_name -> conf.Server.HTTP
	12, // 4: conf.Server.grpc:type_name -> conf.Server.GRPC
	13, // 5: conf.Server.prof:type_name -> conf.Server.Prof
	14, // 6: conf.Server.healthy:type_name -> conf.Server.Healthy
	15, // 7: conf.Server.monitor:type_name -> conf.Server.Monitor
	16, // 8: conf.Data.database:type_name -> conf.Data.Database
	17, // 9: conf.Data.redis:type_name -> conf.Data.Redis
	18, // 10: conf.Data.config:type_name -> conf.Data.Config
	25, // 11: conf.Service.registrys:type_name -> conf.Service.Registrys
	27, // 12: conf.Service.traces:type_name -> conf.Service.Traces
	29, // 13: conf.Service.alert:type_name -> conf.Service.Alert
	31, // 14: conf.Service.gateways:type_name -> conf.Service.Gateways
	32, // 15: conf.Service.cors:type_name -> conf.Service.Cors
	33, // 16: conf.Service.log:type_name -> conf.Service.Log
	6,  // 17: conf.Service.user_auth_method:type_name -> conf.Service.AuthMethod.Enums
	6,  // 18: conf.Service.svc_auth_method:type_name -> conf.Service.AuthMethod.Enums
	35, // 19: conf.Service.sdn:type_name -> conf.Service.Sdn
	37, // 20: conf.Service.dependency_http_services:type_name -> conf.Service.DependencyHttpServicesEntry
	38, // 21: conf.Service.service_alias:type_name -> conf.Service.ServiceAliasEntry
	45, // 22: conf.Server.HTTP.timeout:type_name -> google.protobuf.Duration
	45, // 23: conf.Server.GRPC.timeout:type_name -> google.protobuf.Duration
	45, // 24: conf.Server.Prof.timeout:type_name -> google.protobuf.Duration
	45, // 25: conf.Server.Healthy.timeout:type_name -> google.protobuf.Duration
	45, // 26: conf.Server.Monitor.timeout:type_name -> google.protobuf.Duration
	45, // 27: conf.Data.Redis.read_timeout:type_name -> google.protobuf.Duration
	45, // 28: conf.Data.Redis.write_timeout:type_name -> google.protobuf.Duration
	1,  // 29: conf.Data.Config.format:type_name -> conf.Data.Config.Format.Enums
	22, // 30: conf.Data.Config.etcd_sources:type_name -> conf.Data.Config.EtcdSource
	2,  // 31: conf.Data.Config.env:type_name -> conf.Data.Config.Env.Enums
	3,  // 32: conf.Data.Config.pre_env_detect_method:type_name -> conf.Data.Config.PreEnv.DetectMethod
	45, // 33: conf.Data.Config.EtcdSource.dial_timeout:type_name -> google.protobuf.Duration
	24, // 34: conf.Service.Registrys.consul:type_name -> conf.Service.Registry
	24, // 35: conf.Service.Registrys.etcd:type_name -> conf.Service.Registry
	24, // 36: conf.Service.Registrys.endpoint:type_name -> conf.Service.Registry
	26, // 37: conf.Service.Traces.jaeger:type_name -> conf.Service.Trace
	28, // 38: conf.Service.Alert.work_wechat:type_name -> conf.Service.WorkWechat
	39, // 39: conf.Service.Alert.feishu:type_name -> conf.Service.Alert.Feishu
	30, // 40: conf.Service.Gateways.apisix:type_name -> conf.Service.Gateway
	30, // 41: conf.Service.Gateways.kong:type_name -> conf.Service.Gateway
	5,  // 42: conf.Service.Log.storage:type_name -> conf.Service.Log.STORAGE.TYPE
	42, // 43: conf.Service.Log.file:type_name -> conf.Service.Log.File
	43, // 44: conf.Service.Log.e_s:type_name -> conf.Service.Log.ES
	44, // 45: conf.Service.Log.std_out:type_name -> conf.Service.Log.StdOut
	4,  // 46: conf.Service.Log.enable_level:type_name -> conf.Service.Log.LogLevel.TYPE
	36, // 47: conf.Service.DependencyHttpServicesEntry.value:type_name -> conf.Service.DependencySvc
	4,  // 48: conf.Service.Log.File.enable_level:type_name -> conf.Service.Log.LogLevel.TYPE
	4,  // 49: conf.Service.Log.ES.enable_level:type_name -> conf.Service.Log.LogLevel.TYPE
	4,  // 50: conf.Service.Log.StdOut.enable_level:type_name -> conf.Service.Log.LogLevel.TYPE
	51, // [51:51] is the sub-list for method output_type
	51, // [51:51] is the sub-list for method input_type
	51, // [51:51] is the sub-list for extension type_name
	51, // [51:51] is the sub-list for extension extendee
	0,  // [0:51] is the sub-list for field type_name
}

func init() { file_config_fwconf_proto_init() }
func file_config_fwconf_proto_init() {
	if File_config_fwconf_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_config_fwconf_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bootstrap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_fwconf_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_fwconf_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_fwconf_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_fwconf_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server_HTTP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_fwconf_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server_GRPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_fwconf_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server_Prof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_fwconf_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server_Healthy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_fwconf_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server_Monitor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_fwconf_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data_Database); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_fwconf_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data_Redis); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_fwconf_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data_Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_fwconf_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data_Config_SrcType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_fwconf_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data_Config_Format); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_fwconf_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data_Config_Env); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_fwconf_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data_Config_EtcdSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_fwconf_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data_Config_PreEnv); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_fwconf_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service_Registry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_fwconf_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service_Registrys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_fwconf_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service_Trace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_fwconf_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service_Traces); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_fwconf_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service_WorkWechat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_fwconf_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service_Alert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_fwconf_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service_Gateway); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_fwconf_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service_Gateways); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_fwconf_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service_Cors); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_fwconf_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service_Log); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_fwconf_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service_AuthMethod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_fwconf_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service_Sdn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_fwconf_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service_DependencySvc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_fwconf_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service_Alert_Feishu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_fwconf_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service_Log_LogLevel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_fwconf_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service_Log_STORAGE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_fwconf_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service_Log_File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_fwconf_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service_Log_ES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_fwconf_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service_Log_StdOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_config_fwconf_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   38,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_config_fwconf_proto_goTypes,
		DependencyIndexes: file_config_fwconf_proto_depIdxs,
		EnumInfos:         file_config_fwconf_proto_enumTypes,
		MessageInfos:      file_config_fwconf_proto_msgTypes,
	}.Build()
	File_config_fwconf_proto = out.File
	file_config_fwconf_proto_rawDesc = nil
	file_config_fwconf_proto_goTypes = nil
	file_config_fwconf_proto_depIdxs = nil
}
